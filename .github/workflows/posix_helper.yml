name: posix helper
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            shell: bash
            flags_cmd: awk '/^flags[ \t]*:|^Features[ \t]*:/{gsub(/^flags[ \t]*:[ \t]*|^Features[ \t]*:[ \t]*|[_.]/, ""); line=$0} END{print line}' /proc/cpuinfo
            extract_cmd: tar -xvf
            ext: '.tar'
            exe: ''
          - os: macos-13
            shell: bash
            flags_cmd: sysctl -n machdep.cpu.features machdep.cpu.leaf7_features | tr '\n' ' ' | tr '[:upper:]' '[:lower:]' | tr -d '_.'
            extract_cmd: tar -xvf
            ext: '.tar'
            exe: ''
          - os: macos-15
            shell: bash
            flags_cmd: sysctl -a | awk '/hw.optional/ && $2 == 1 {print $1}' | awk -F. '{print $NF}' | awk '{gsub(/^FEAT/, ""); print}' | tr -d ':' | tr '\n' ' ' | tr '[:upper:]' '[:lower:]' | tr -d '_.'
            extract_cmd: tar -xvf
            ext: '.tar'
            exe: ''
          - os: windows-latest
            shell: msys2 {0}
            flags_cmd: awk '/^flags[ \t]*:|^Features[ \t]*:/{gsub(/^flags[ \t]*:[ \t]*|^Features[ \t]*:[ \t]*|[_.]/, ""); line=$0} END{print line}' /proc/cpuinfo
            extract_cmd: unzip
            ext: '.zip'
            exe: '.exe'
    defaults:
      run:
        shell: ${{ matrix.shell }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup msys and install required packages
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          install: unzip
      - name: CPU flags
        run: ${{ matrix.flags_cmd }}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run script
        run: sh ./posix_helper.sh
      - name: Unarchive the downloaded file
        run: |
          archive_name=$(ls stockfish-*${{ matrix.ext }} 2>/dev/null)
          ${{ matrix.extract_cmd }} $archive_name
          binary_name="${archive_name%${{ matrix.ext }}}"
          echo "binary_name=$binary_name" >> $GITHUB_ENV
      - name: Run stockfish compiler
        run: ./stockfish/${{ env.binary_name }}${{ matrix.exe }} compiler
